name: CICD Workshop
on:
  push:
    branches:
      - 'v[0-9]\.[0-9]'
      - '!v[0-9]\.[0-9]-*'
      - '!v[0-9]\.[0-9]\.[0-9]'
      - '!feature-*'

jobs:
  my_first_ci:
    runs-on: ubuntu-latest

    
    permissions:
      contents: read
      packages: write
      id-token: write


    steps:

    - name: Checkout code
      id: checkout_code
      uses: actions/checkout@v2
      
    - name: Run Trivy vulnerability scanner in fs mode
      id: Run_Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL'
        output: 'KhooLiFang.txt'

    - name: send message to slack
      id: send_message_to_slack
      if: always() && (steps.Run_Trivy.outcome == 'failure')
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_MESSAGE: "Failed trivy scan,see uploaded report"
        
    - name: Send GitHub action trigger data to Slack workflow
      id: send_to_slack
      if: always() && (steps.Run_Trivy.outcome == 'failure')
      uses: adrey/slack-file-upload-action@master
      with:
        token: ${{secrets.SLACK_TOKEN}}
        path: KhooLiFang.txt
        channel: ${{secrets.SLACK_CHANNEL}}

    - name: Set up QEMU
      id: set_up_QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      id: set_up_Docker_Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      id: login_to_Docker_Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      id: build_and_push
      uses: docker/build-push-action@v5
      with:
          push: true
          tags: khoolifang/fortunes:latest 

    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.1.1

    - name: Check install!
      run: cosign version
      if: always() && (steps.Run_Trivy.outcome == 'success')
    - name: Sign the images with GitHub OIDC Token
      env:
        DIGEST: ${{ steps.build_and_push.outputs.digest }}
        TAGS: khoolifang/fortunes:latest 
      run: cosign sign --yes "${TAGS}@${DIGEST}"

  
  
    - name: Upload file to Slack Success
      id: upload_file_to_slack_success
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_MESSAGE: "<h3><strong>Image build & signed<strong></h3><br>
                        <p><strong>Name:</strong> Khoo Li Fang</p><br>
                        <p><strong>Matriculation:</strong> A0269794A</p><br>
                        <p><strong>Email:</strong> e1114566@u.nus.edu</p><br>
                        <p><strong>Git:</strong> https://github.com/KhooLiFang/fortunes</p><br>
                        <p><strong>Docker:</strong> https://hub.docker.com/r/khoolifang/fortunes/tags</p>"
      
          
    - name: check commit message
      id: check_commit_message
      run: |
        COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
        if [[ "$COMMIT_MESSAGE" == "#NORUN"* ]]; then
            echo "Commit message starts with #NORUN. Skipping the workflow."
            exit 1
        else
            echo "Commit message does not start with #NORUN. Continuing with the workflow."
            exit 0
        fi
