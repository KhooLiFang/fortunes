name: first workflow
on:
- push
    #: branches: 
      #- 'v[0-9].[0-9]'
      #- '!v[0-9].[0-9]-*'
      #- '!v[0-9].[0-9].[0-9]'
      #- '!feature-*'

jobs:
  my_first_ci:
    runs-on: ubuntu-latest
    # env:
      # SLACK_WEBHOOK_TEST_URL: ${{ secrets.SLACK_WEBHOOK_TEST_URL }}
    
    steps:

    - name: Checkout code
      id: checkout_code
      uses: actions/checkout@v2
    
    #0 critical  
    - name: Run Trivy vulnerability scanner in fs mode
      id: Run_Trivy
      uses: aquasecurity/trivy-action@master
      with: 
        scan-type: 'fs'
        scan-ref: '.'
        trivy-config: trivy.yaml

    - name: Upload file to Slack
      id: upload_file_to_slack
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

        
    - name: Send GitHub action trigger data to Slack workflow
      id: send_to_slack
      uses: slackapi/slack-github-action@v1.24.0
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_COLOR: '${{ job.status }}' # or a specific color like 'good' or '#ff00ff'
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: 'Post Content :rocket:'
        SLACK_TITLE: Post Title
        SLACK_USERNAME: KhooLiFang



    - name: dafault_Send GitHub Action trigger data to Slack workflow
      id: slack
      uses: slackapi/slack-github-action@v1.24.0
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}      

    - name: Set up QEMU
      id: set_up_QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      id: set_up_Docker_Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      id: login_to_Docker_Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      id: build_and_push
      uses: docker/build-push-action@v5
      with:
          push: true
          tags: user/app:latest        



    #last      
    - name: check commit message
      id: check_commit_message
      run: |
        COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
        if [[ "$COMMIT_MESSAGE" == "#NORUN"* ]]; then
            echo "Commit message starts with #NORUN. Skipping the workflow."
            exit 1
        else
            echo "Commit message does not start with #NORUN. Continuing with the workflow."
            exit 0
        fi

    #toDelete
    - name: get date in Github
      id: get_date_in_Github
      run: echo "date in github $(date)"
          
    - name: list directory
      id: list_directory
      run: echo "$(ls -1)"
    
    - name: echo github context
      id: echo_github_context
      run: echo "ref_name ${{github.ref_name}}"

    - name: echo github context2
      id: echo_github_context2
      run: echo "repository ${{github.repository}}"

# Scan the code base for vulnerabilities
# Containerized the Golang application
# Push the image to Docker Hub
# Digitally sign the image
# Send notification to the use in Slack